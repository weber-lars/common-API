openapi: 3.0.0
info:
  version: 1.2.0
  title: Order Placement
  description: 'This API is used to place orders and check on the order status.'
  contact:
    email: wealth@common-api.ch
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html' 

servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/OpenWealthAPI/SecurityTrading/1.2.0

    
paths:
  /orders:
    parameters:
     - $ref: '#/components/parameters/correlation_in_header'
    post:
      summary: Posts a new order.
      description: Posts a new order.
      operationId: postOrder
      tags:
        - orderplacement

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order'
      responses:
        '201':
          description: Order placed successfully.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
    get:
      summary: Returns a list of open security orders.
      description: Returns all open orders to which the user of the API has access to. Paging is done based on the completeOrder object, i.e. if limit is set to 1, then 1 completeOrder will be returned per page.
      operationId: getOrders
      tags:
        - orderstatus
      parameters:
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: Order list.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
            nextCursor:
              $ref: '#/components/headers/nextCursor'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/completeOrder'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /orders/{orderId}:
    parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
          description: The security order id. This Id corresponds with the masterReference.
      - $ref: '#/components/parameters/correlation_in_header'
    get:
      summary: Returns a single security order.
      description: Returns a specific security order.
      operationId: getOrderByOrderId
      tags:
        - orderstatus
      responses:
        '200':
          description: Order list.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/completeOrder'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

    delete:
      summary: Cancellation of a specific order.
      description: Returns a specific security order.
      operationId: deleteOrderByOrderId
      tags:
        - orderplacement
      responses:
        '200': 
          description: Order successfully cancelled.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
          
components:

  ###############
  # Parameters  #
  ###############

  parameters:
    limit: 
      name: limit
      in: query
      description: Maximum number of items to return.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
#        maximum: 100
#        default: 20
    cursor:
      name: cursor
      in: query
      description: An opaque string value used for pagination
      required: false
      schema:
        type: string
    correlation_in_header:
      in: header
      name: X-Correlation-ID
      description: Unique ID (defined by the caller) which will be reflected back in the response.
      required: true
      schema:
        type: string

  ###############
  # Headers     #
  ###############

  headers:
  
    X-Correlation-ID:
      description: Client defined ID from request to correlates HTTP requests between a client and server.
      schema:
        type: string
        example: f058ebd6-02f7-4d3f-942e-904344e8cde5
    nextCursor:
      description: An opaque string value, or an empty string if there are no more results. 
      required: false
      schema:
        type: string
        
        

  ######################
  # Schemas
  ######################

  schemas:

    tradingAccount:
      type: object
      properties:
        accountIdentification:
          type: string
          maxLength: 35
          example: '876543219'
          description: Unique and unambiguous identification for the account
        accountType: 
          type: string
          description: Indicatates the type of the account.
          example: 'safekeepingAccount'
          enum: 
          - cashAccount
          - safekeepingAccount
          - other

    order:
      required:
      - masterReference
      - bulkOrderDetails
      - allocations
      type: object
      properties:
        masterReference:
          type: string
          example: '123123123'
          description: Unique and unambiguous identifier for a group of individual orders, as assigned by the instructing party. This identifier links the individual orders together.
        bulkOrderDetails:
          $ref: '#/components/schemas/bulkOrderDetails'
        allocations:
          type: array
          items:
            $ref: '#/components/schemas/allocation'

    bulkOrderDetails:
      required:
      - side
      - orderQuantity
      - instrument
      - currency
      - executionType
      type: object
      properties:
        side:
          type: string
          description: Side taken by a party on an order.
          example: 'buy'
          enum:
          - buy
          - sell
          - subscription
          - redemption
        orderQuantity:
          $ref: '#/components/schemas/orderQuantity'
        displayQuantity:
          description: Quantity of the order displayed.
          type: object
          properties:
            amount:
              type: string
              pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
              maxLength: 22
              example: "300"
            currency:
              $ref: '#/components/schemas/currency'
            type: 
              type: string
              description: Type of the amount
              example: 'unitsNumber'
              enum:
              - unitsNumber
              - nominal
        financialInstrument:
          $ref: '#/components/schemas/financialInstrumentIdentification'
        placeOfTrade:
          $ref: '#/components/schemas/placeOfTrade'
        currency:
          $ref: '#/components/schemas/currency'
        executionType:
          type: string
          description: Type of the execution of the order
          example: 'limit'
          enum:
          - market
          - limit
          - stop
          - stopLimit
        limitPrice:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
          maxLength: 22
          description: Limit price per unit of quantity (e.g. per share)
          example: "12.50"
        stopPrice:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
          maxLength: 22
          description: Stop price per unit of quantity (e.g. per share)
          example: "10.05"
        timeInForce:
          type: string
          description: Specifies how long the order remains in effect. Absence of this field is interpreted as DAY.
          example: 'day'
          enum:
          - day
          - goodTillCancel
          - atTheOpening
          - immediateOrCancel
          - fillOrKill
          - goodTillCrossing
          - goodTillDate
          - atTheClose
          - goodThroughCrossing
          - atCrossing
          - goodForTime
          - goodForAuction
          - goodForMonth
        expiryDateTime:
          type: string
          format: date-time
          description: Time/Date of order expiration

    orderQuantity:
          type: object
          properties:
            amount:
              type: string
              pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
              maxLength: 22
              example: "300"
            currency:
              $ref: '#/components/schemas/currency'
            type: 
              type: string
              description: Type of the amount
              example: 'unitsNumber'
              enum:
              - unitsNumber
              - nominal
              - grossAmount
              - netAmount

    placeOfTrade:
          type: object
          description: Market in which a trade transaction is to be or has been executed.
          properties:
            marketIdentificationCode:
              type: string
              maxLength: 4
              description: Market Identifier Code. Identification of a financial market, as stipulated in the norm ISOMarket Identifier Code. Identification of a financial market, as stipulated in the norm ISO 10383 "Codes for exchanges and market identifications".
              example: 'XSWX'
            marketDescription:
              type: string
              description: Description of the market when no Market Identification Code is available.
              example: 'OTC'

    financialInstrumentIdentification:
          type: object
          required: 
            - identification
            - type
          properties:
            identification:
              type: string
              example: 'CH0012005267'
              description: Instrument identification
            type:
              type: string
              example: 'isin'
              description: Type of the instrument identification
              enum: 
              - isin
              - sedol
              - cusip
              - ric
              - tickerSymbol
              - bloomberg
              - cta
              - quick
              - wertpapier
              - dutch
              - valoren
              - sicovam
              - belgian
              - common
              - otherProprietaryIdentification

    allocation:
      type: object
      required: 
        - accounts
        - allocationIdentification
        - amount
        - physicalDeliveryIndicator
      properties:
        accounts:
          type: array
          description: Indicates the affected cashAccount and safekeepingAccount
          items:
            $ref: '#/components/schemas/tradingAccount'
        allocationIdentification:
          type: string
          description: Unique and unambiguous identifier for the allocation, as assigned by the instructing party.
          example: '123123123'
        clientAllocationIdentification:
          type: string
          description: Identification of unabiguous identifier of the individual allocation of the bulk order. Corresponds with the transactionIdentification.
          example: '321321321'
        amount:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
          maxLength: 22
          description: Quantity to be allocated to specific safekeeping account
          example: "100"
        physicalDeliveryIndicator:
          type: boolean
          description: Indicates whether the financial instrument is to be physically delivered.
          default: false

    orderState:
      required:
      - status
      - previouslyExecutedQuantity
      - remainingQuantity
      type: object
      properties:
        status:
          type: string
          description: Status of the individual order is accepted or already executed or sent to next party or received.
          enum:
          - new
          - partiallyFilled
          - filled
          - doneForDay
          - canceled
          - replaced
          - pendingCancel
          - stopped
          - rejected
          - suspended
          - pendingNew
          - calculated
          - expired
          - acceptedForBidding
          - pendingReplace
          example: 'doneForDay'
        reason:
          type: object
          properties:
            code:
              type: string
              description: Cancelled reason expressed as a code.
              enum:
              - cancelledByHub
              - cancelledByInstructingParty
              - endOfLife
              - cancelledByOther
              example: 'endOfLife'
            proprietary:
              type: string
              description: Cancelled reason expressed as a proprietary code.
              maxLength: 35
        previouslyExecutedQuantity:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
          maxLength: 22
          description: Total quantity (e.g. number of shares) filled.
          example: "100"
        remainingQuantity:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
          maxLength: 22
          description: Quantity open for further execution. If the processingStatus is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then remainingQuantity could be 0, otherwise remainingQuantity = OrderQuantity - previouslyExecutedQuantity.
          example: "20"
        averagePrice:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
          maxLength: 22
          description: Calculated average price of all fills on this order.
          example: "17.85"
        dayOrderQuantity:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
          maxLength: 22
          description: For GoodTill(GT) orders the orderQuantity less all quantity (adjusted for stock splits) that traded on previous days. DayOrderQuantity = OrderQuantity - (previouslyExecutedQuantity - dayPreviouslyExecutedQuantity).
          example: "15"
        dayPreviouslyExecutedQuantity:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
          maxLength: 22
          description:  For GT orders the quantity on a GT order that has traded today.
          example: "5"
        dayAveragePrice:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
          maxLength: 22
          description: For GT orders the average price for quantity on a GT order that has traded today.
          example: "17.8"
        billingDetail:
          type: object
          properties:
            numberDaysAccrued:
              type: number
              format: integer
              example: 28
              description: Specifies the number of days used for calculating the accrued interest amount.
            amountList:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: Indicates the type of billing amount.
                    example: 'accruedInterestAmount'
                    enum:
                    - accruedInterestAmount
                    - grossTradeAmount
                    - grossSettlementAmount
                    - netSettlementAmount
                    - netBillingAmount
                  amount:
                    type: string
                    pattern: "[0-9]{1,12}([.][0-9]{1,9})?"
                    maxLength: 22
                    example: "1264"
                    description: Billing value
                  currency:
                    $ref: '#/components/schemas/currency' 
        dateList:
          type: array
          description: Indicates dates relevant for the respective order
          items:
            type: object
            properties:
              date:
                $ref: '#/components/schemas/date'
              dateType:  
                type: string
                example: 'bookingDate'
                enum:
                - transactionDate
                - bookingDate
                - valueDate
    
    completeOrder:
      type: object
      required: 
        - transactionIdentification
      properties:
          transactionIdentification:
            type: string
            description: Unique and unambiguous identifier for the order execution, as assigned by the confirming party.
            example: '1231234'
          order:
            $ref: '#/components/schemas/order'
          orderState:
            $ref: '#/components/schemas/orderState'
    
    currency:
      description: ISO 4217 code
      type: string
      pattern: '[A-Z]{3}'
      example: 'CHF'

    date:
      type: string
      format: date
      description: Date according to ISO 8601 i.e. YYYY-MM-DD format
      example: '2018-04-13'


    commonErrorResponse:
      title: Common Error Response
      type: object
      properties:
        type:
          $ref: '#/components/schemas/commonErrorType'
        title:
          type: string
          example:
            This is the general problem description
        detail:
          type: string
          example:
            Detailed problem description with respect to the current request
        instance:
          type: string
          example:
            path/to/corresponding/resource

    commonErrorType:
      type: string
      description: Error types for commonErrorResponse
      example: invalidPayload
      enum:
        - invalidPayload
        - malformedPayload
        - invalidToken
        - expiredToken
        - insufficientPrivileges
        - noAccessToResource
        - resourceDoesNotExist
        - resourceNotReady
        - resourceTooLarge
        - wrongMethod
        - operationNotAllowed
        - technicalError
        - notImplemented
        - serviceUnavailable

# ---- Responses - Standard Errors Common Data Model v1.2.2----
  responses:
    standard400:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard401:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json     
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard403:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Forbidden - The server understood the request but refuses to authorize it. 
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard404:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard405:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard500:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard501:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Not Implemented - The server does not support the functionality required to fulfill the request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard503:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Service Unavailable. The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
  # ---- End Responses - Standard Errors